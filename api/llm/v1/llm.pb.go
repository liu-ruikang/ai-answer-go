// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: api/llm/v1/llm.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 消息结构定义
type Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Role          string                 `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`       // 角色：system, user, assistant
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"` // 消息内容
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_api_llm_v1_llm_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_api_llm_v1_llm_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_api_llm_v1_llm_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *Message) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// Deepseek R1请求
type ChatDeepseekR1Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`  // 会话ID
	Messages      []*Message             `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`                     // 消息历史
	Temperature   float32                `protobuf:"fixed32,3,opt,name=temperature,proto3" json:"temperature,omitempty"`             // 温度参数
	TopP          float32                `protobuf:"fixed32,4,opt,name=top_p,json=topP,proto3" json:"top_p,omitempty"`               // Top-p参数
	MaxTokens     int32                  `protobuf:"varint,5,opt,name=max_tokens,json=maxTokens,proto3" json:"max_tokens,omitempty"` // 最大生成token数
	Stream        bool                   `protobuf:"varint,6,opt,name=stream,proto3" json:"stream,omitempty"`                        // 是否流式输出
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatDeepseekR1Request) Reset() {
	*x = ChatDeepseekR1Request{}
	mi := &file_api_llm_v1_llm_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatDeepseekR1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatDeepseekR1Request) ProtoMessage() {}

func (x *ChatDeepseekR1Request) ProtoReflect() protoreflect.Message {
	mi := &file_api_llm_v1_llm_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatDeepseekR1Request.ProtoReflect.Descriptor instead.
func (*ChatDeepseekR1Request) Descriptor() ([]byte, []int) {
	return file_api_llm_v1_llm_proto_rawDescGZIP(), []int{1}
}

func (x *ChatDeepseekR1Request) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ChatDeepseekR1Request) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *ChatDeepseekR1Request) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *ChatDeepseekR1Request) GetTopP() float32 {
	if x != nil {
		return x.TopP
	}
	return 0
}

func (x *ChatDeepseekR1Request) GetMaxTokens() int32 {
	if x != nil {
		return x.MaxTokens
	}
	return 0
}

func (x *ChatDeepseekR1Request) GetStream() bool {
	if x != nil {
		return x.Stream
	}
	return false
}

// Deepseek R1响应
type ChatDeepseekR1Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`          // 会话ID
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`                               // 生成的内容
	TokenUsage    *TokenUsage            `protobuf:"bytes,3,opt,name=token_usage,json=tokenUsage,proto3" json:"token_usage,omitempty"`       // Token使用情况
	Model         string                 `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`                                   // 使用的模型
	ErrorMessage  string                 `protobuf:"bytes,5,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // 错误信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatDeepseekR1Response) Reset() {
	*x = ChatDeepseekR1Response{}
	mi := &file_api_llm_v1_llm_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatDeepseekR1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatDeepseekR1Response) ProtoMessage() {}

func (x *ChatDeepseekR1Response) ProtoReflect() protoreflect.Message {
	mi := &file_api_llm_v1_llm_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatDeepseekR1Response.ProtoReflect.Descriptor instead.
func (*ChatDeepseekR1Response) Descriptor() ([]byte, []int) {
	return file_api_llm_v1_llm_proto_rawDescGZIP(), []int{2}
}

func (x *ChatDeepseekR1Response) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ChatDeepseekR1Response) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChatDeepseekR1Response) GetTokenUsage() *TokenUsage {
	if x != nil {
		return x.TokenUsage
	}
	return nil
}

func (x *ChatDeepseekR1Response) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *ChatDeepseekR1Response) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// Token使用统计
type TokenUsage struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	PromptTokens     int32                  `protobuf:"varint,1,opt,name=prompt_tokens,json=promptTokens,proto3" json:"prompt_tokens,omitempty"`             // 提示使用的token数
	CompletionTokens int32                  `protobuf:"varint,2,opt,name=completion_tokens,json=completionTokens,proto3" json:"completion_tokens,omitempty"` // 生成使用的token数
	TotalTokens      int32                  `protobuf:"varint,3,opt,name=total_tokens,json=totalTokens,proto3" json:"total_tokens,omitempty"`                // 总token数
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TokenUsage) Reset() {
	*x = TokenUsage{}
	mi := &file_api_llm_v1_llm_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenUsage) ProtoMessage() {}

func (x *TokenUsage) ProtoReflect() protoreflect.Message {
	mi := &file_api_llm_v1_llm_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenUsage.ProtoReflect.Descriptor instead.
func (*TokenUsage) Descriptor() ([]byte, []int) {
	return file_api_llm_v1_llm_proto_rawDescGZIP(), []int{3}
}

func (x *TokenUsage) GetPromptTokens() int32 {
	if x != nil {
		return x.PromptTokens
	}
	return 0
}

func (x *TokenUsage) GetCompletionTokens() int32 {
	if x != nil {
		return x.CompletionTokens
	}
	return 0
}

func (x *TokenUsage) GetTotalTokens() int32 {
	if x != nil {
		return x.TotalTokens
	}
	return 0
}

var File_api_llm_v1_llm_proto protoreflect.FileDescriptor

var file_api_llm_v1_llm_proto_rawDesc = string([]byte{
	0x0a, 0x14, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x6c, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x6c, 0x6d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6c, 0x6d, 0x2e,
	0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x37, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xd5, 0x01, 0x0a, 0x15, 0x43, 0x68,
	0x61, 0x74, 0x44, 0x65, 0x65, 0x70, 0x73, 0x65, 0x65, 0x6b, 0x52, 0x31, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x2f, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6c, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x5f, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x74, 0x6f, 0x70, 0x50, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61,
	0x78, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x6d, 0x61, 0x78, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x22, 0xc5, 0x01, 0x0a, 0x16, 0x43, 0x68, 0x61, 0x74, 0x44, 0x65, 0x65, 0x70, 0x73, 0x65,
	0x65, 0x6b, 0x52, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6c, 0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x0a, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6d,
	0x70, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x2b, 0x0a,
	0x11, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x32, 0x93, 0x02,
	0x0a, 0x03, 0x4c, 0x4c, 0x4d, 0x12, 0x7d, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x74, 0x44, 0x65, 0x65,
	0x70, 0x73, 0x65, 0x65, 0x6b, 0x52, 0x31, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6c,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x44, 0x65, 0x65, 0x70, 0x73, 0x65, 0x65,
	0x6b, 0x52, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6c, 0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x44, 0x65, 0x65, 0x70,
	0x73, 0x65, 0x65, 0x6b, 0x52, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x6c, 0x6c, 0x6d, 0x2f, 0x64, 0x65, 0x65, 0x70, 0x73, 0x65, 0x65, 0x6b, 0x2d, 0x72, 0x31, 0x2f,
	0x63, 0x68, 0x61, 0x74, 0x12, 0x8c, 0x01, 0x0a, 0x14, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43,
	0x68, 0x61, 0x74, 0x44, 0x65, 0x65, 0x70, 0x73, 0x65, 0x65, 0x6b, 0x52, 0x31, 0x12, 0x21, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x44,
	0x65, 0x65, 0x70, 0x73, 0x65, 0x65, 0x6b, 0x52, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x44, 0x65, 0x65, 0x70, 0x73, 0x65, 0x65, 0x6b, 0x52, 0x31, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01, 0x2a, 0x22,
	0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x6c, 0x6d, 0x2f, 0x64, 0x65, 0x65, 0x70, 0x73, 0x65,
	0x65, 0x6b, 0x2d, 0x72, 0x31, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2d, 0x63, 0x68, 0x61,
	0x74, 0x30, 0x01, 0x42, 0x1c, 0x5a, 0x1a, 0x61, 0x69, 0x2d, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x2d, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x6c, 0x6d, 0x2f, 0x76, 0x31, 0x3b, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_api_llm_v1_llm_proto_rawDescOnce sync.Once
	file_api_llm_v1_llm_proto_rawDescData []byte
)

func file_api_llm_v1_llm_proto_rawDescGZIP() []byte {
	file_api_llm_v1_llm_proto_rawDescOnce.Do(func() {
		file_api_llm_v1_llm_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_llm_v1_llm_proto_rawDesc), len(file_api_llm_v1_llm_proto_rawDesc)))
	})
	return file_api_llm_v1_llm_proto_rawDescData
}

var file_api_llm_v1_llm_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_llm_v1_llm_proto_goTypes = []any{
	(*Message)(nil),                // 0: api.llm.v1.Message
	(*ChatDeepseekR1Request)(nil),  // 1: api.llm.v1.ChatDeepseekR1Request
	(*ChatDeepseekR1Response)(nil), // 2: api.llm.v1.ChatDeepseekR1Response
	(*TokenUsage)(nil),             // 3: api.llm.v1.TokenUsage
}
var file_api_llm_v1_llm_proto_depIdxs = []int32{
	0, // 0: api.llm.v1.ChatDeepseekR1Request.messages:type_name -> api.llm.v1.Message
	3, // 1: api.llm.v1.ChatDeepseekR1Response.token_usage:type_name -> api.llm.v1.TokenUsage
	1, // 2: api.llm.v1.LLM.ChatDeepseekR1:input_type -> api.llm.v1.ChatDeepseekR1Request
	1, // 3: api.llm.v1.LLM.StreamChatDeepseekR1:input_type -> api.llm.v1.ChatDeepseekR1Request
	2, // 4: api.llm.v1.LLM.ChatDeepseekR1:output_type -> api.llm.v1.ChatDeepseekR1Response
	2, // 5: api.llm.v1.LLM.StreamChatDeepseekR1:output_type -> api.llm.v1.ChatDeepseekR1Response
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_llm_v1_llm_proto_init() }
func file_api_llm_v1_llm_proto_init() {
	if File_api_llm_v1_llm_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_llm_v1_llm_proto_rawDesc), len(file_api_llm_v1_llm_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_llm_v1_llm_proto_goTypes,
		DependencyIndexes: file_api_llm_v1_llm_proto_depIdxs,
		MessageInfos:      file_api_llm_v1_llm_proto_msgTypes,
	}.Build()
	File_api_llm_v1_llm_proto = out.File
	file_api_llm_v1_llm_proto_goTypes = nil
	file_api_llm_v1_llm_proto_depIdxs = nil
}
